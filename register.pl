#!/usr/bin/perl

use strict;
use DBI;
use CGI;
my $cgi = new CGI;
do "db.pl";

# == pull the variables we had from the form
my $publicid = $cgi->param('publicid');
my $privateid = $cgi->param('privateid');
my $aeskey = $cgi->param('aeskey');

print $cgi->header();

print $cgi->start_html();
print $cgi->h1('Register a new yubikey token');

if($publicid eq '' || $privateid eq '' || $aeskey eq '')
{
	# == if we don't have any of the 3 required fields, show the form again
	print $cgi->p('Run the yubikey personalization tool, and configure a yubikey token with new IDs.  Enter those IDs as generated by the personalization tool into the form below.');
	print $cgi->start_form();
	print $cgi->p('Public ID (16 byte modhex)');
	print $cgi->textfield('publicid','',24,24);
	print $cgi->p('Private ID (6 byte hex)');
	print $cgi->textfield('privateid','',24,24);
	print $cgi->p('AES Key (16 byte hex)');
	print $cgi->textfield('aeskey','',47,47);
	print $cgi->submit();
	print $cgi->end_form();
}
else
{
	# == do the registration check
	print $cgi->h2("Registering $publicid");

	# == lets make sure the input has been validated, and clean it up
	$publicid = &validate('Public ID',$publicid,'modhex',16);
	$privateid = &validate('Private ID',$privateid,'hex',12);
	$aeskey = &validate('AES key',$aeskey,'hex',32);

	# == setup the database

	my ($host,$db,$user,$pass) = &dbconnect();
	my $dbh = DBI->connect("DBI:mysql:database=$db;host=$host",$user,$pass,{RaiseError => 0});

	# Check if the public id has already been captured in the database
	my $sth = $dbh->prepare('select privateid from tbl_yubikeys where publicid = ?');
	if($sth->execute($publicid))
	{
		my (@ary) = $sth->fetchrow_array();
		$sth->finish();
		if($ary[0] ne '')
		{
			print "The private ID already exists.  We can not register it.  You should delete it's entry from the table if you really need to re-register this key";
			exit(0);
		}
	}
	else
	{
		if($dbh->errstr =~ /Table .+ doesn't exist/)
		{
			# create the database table if it doesn't exist yet..
			$dbh->do('create table tbl_yubikeys (publicid varchar(16) primary key, privateid varchar(16),aeskey varchar(40),session integer,counter integer)');
		}
	}

	# == now let's add it to the table
	if($dbh->do('insert into tbl_yubikeys (publicid, privateid, aeskey, session, counter) values (?,?,?,0,0)',undef,$publicid,$privateid,$aeskey))
	{
		print "Key has been successfully added.";
	}
	else
	{
		print "Something went wrong.... Check your webserver logs to see why mySQL could not add it in.";
	}

	$dbh->disconnect();	
}
print $cgi->end_html();


sub validate
{
	my ($text,$input,$type,$max) = @_;

	$input = lc($input);

	if($type eq 'modhex')
	{
		$input =~ s/[^cbdefghijklnrtuv]//g;	# we expect modhex, so remove anything else
	}
	if($type eq 'hex')
	{
		$input =~ s/[^a-f0-9]//g;		# we expect hex, so remove anything else
	}

	if(length($input) <= $max)
	{
		return $input;	
	}
	else
	{
		print "<p>The input for $text (<b>$input</b>) was expected as $type with a max length of $max.</p>";
		exit(0);
	}
}
